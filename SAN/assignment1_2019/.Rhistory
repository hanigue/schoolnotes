help(gam)
help('gam')
??gam
testMeanSquareError(gam, medv ~ ns(lstat,5) + rm, Boston)
library("MASS") # Includes the Boston dataset
library("formula.tools") # Contains a helper function
library("gam") # Generalized additive models
testMeanSquareError = function(modelType, modelStruct, dataset) {
set.seed(7)
datasetSize <- nrow(dataset) # spocita radky datasetu
sampleSize <- floor(0.8 * datasetSize) # sampleSize je 80 % velikosti datasetu
# sample(odkud si vybrat, kolik toho chci vybrat) - tady si vybiram velikost toho sampleSize
trainIndices <- sample(seq_len(datasetSize), size = sampleSize) #seq_len() vytvori sekvenci of length datasetu
trainSet <- dataset[trainIndices, ]
testSet <- dataset[-trainIndices, ]
fit <- modelType(modelStruct, data = trainSet)
independentVariable <- formula.tools::lhs(modelStruct)
predictions <- predict(fit, testSet)
groundTruth <- getElement(testSet, independentVariable)
MSE <- sum((groundTruth - predictions)^2)/(nrow(testSet))
MSE
}
testMeanSquareError(gam, medv ~ ns(lstat,5) + rm, Boston)
testMeanSquareError(lm, medv ~ ns(lstat,5) + rm, Boston)
testMeanSquareError(lm, medv ~ gam(ns(lstat,5)) + rm, Boston)
testMeanSquareError(lm, medv ~ ns(lstat,5) + rm, Boston)
testMeanSquareError(gam, medv ~ ns(lstat,5) + rm, Boston)
testMeanSquareError(gam(lm, medv ~ ns(lstat,5) + rm, Boston))
testMeanSquareError(gam, medv ~ ns(lstat,5) + lm(rm), Boston)
testMeanSquareError(gam, medv ~ ns(lstat,9) + ns(rm,9), Boston)
testMeanSquareError(lm, medv ~ ns(lstat,9) + ns(rm,9), Boston)
testMeanSquareError(gam, medv ~ ns(lstat,9) + ns(rm,9), Boston)
poly2 <- lm(medv ~ poly(rm, 9, raw = TRUE) + poly(lstat, 9, raw=TRUE), data = Boston)
testMeanSquareError(lm, medv ~ poly(lstat, 9, raw = TRUE) + poly(rm, 9, raw=TRUE), Boston)
testMeanSquareError(lm, medv ~ log(lstat) + rm, Boston)
ggplot(Boston, aes(lstat, medv) ) + geom_point() + stat_smooth(method = lm, formula = y ~ log(x))
library("ggplot2")
datasetSize <- nrow(dataset) # spocita radky datasetu
datasetSize <- nrow(Boston) # spocita radky datasetu
sampleSize <- floor(0.8 * datasetSize) # sampleSize je 80 % velikosti datasetu
# sample(odkud si vybrat, kolik toho chci vybrat) - tady si vybiram velikost toho sampleSize
trainIndices <- sample(seq_len(datasetSize), size = sampleSize) #seq_len() vytvori sekvenci of length datasetu
trainSet <- Boston[trainIndices, ]
testSet <- Boston[-trainIndices, ]
testMeanSquareError(gam, medv ~ ns(lstat,9) + ns(rm,9), Boston)
testMeanSquareError(lm, medv ~ log(lstat) + rm, Boston)
ggplot(Boston, aes(lstat, medv) ) + geom_point() + stat_smooth(method = lm, formula = y ~ log(x))
testMeanSquareError(lm, medv ~ log(lstat) + log(rm), Boston)
# aes - mapovani atributu vuci grafu
ggplot(Boston, aes(rm, medv)) + geom_point() + stat_smooth(method = lm, formula = y ~ x) # visualizace linearniho modelu medv a rm
testMeanSquareError(lm, medv ~ lstat + rm, Boston)
ggplot(Boston, aes(lstat, medv) ) + geom_point() + stat_smooth(method = lm, formula = y ~ log(x))
ggplot(Boston, aes(lstat, rm) ) + geom_point() + stat_smooth(method = lm, formula = y ~ log(x))
testMeanSquareError(lm, medv ~ log(lstat) + poly(rm, 5), Boston)
grid.table(Boston)
grid.table(
)
dataPrint<- Boston[1:2]
dataPrint
dataPrint<- c(linearModel,polyLinearModel,polynomialModel,overfittingPolyModel,linGam,fullGam,linearCombination,logPolyModel)
linearModel <- testMeanSquareError(lm, medv ~ lstat + rm, Boston)
polyLinearModel <- testMeanSquareError(lm, medv ~ poly(rm, 5, raw = TRUE) + lstat, Boston)
polynomialModel <- testMeanSquareError(lm, medv ~ poly(lstat, 9, raw = TRUE) + poly(rm, 9, raw=TRUE), Boston)
overfittingPolyModel <- testMeanSquareError(lm, medv ~ poly(lstat, 7, raw = TRUE) + poly(rm, 7, raw=TRUE), Boston)
linGam <- testMeanSquareError(gam, medv ~ ns(lstat,5) + r m, Boston)
linGam <- testMeanSquareError(gam, medv ~ ns(lstat,5) + rm, Boston)
fullGam <- testMeanSquareError(gam, medv ~ ns(lstat,9) + ns(rm,9), Boston)
linearCombination <- testMeanSquareError(lm, medv ~ (ns(lstat,9) + ns(rm,9)), Boston)
logPolyModel <- testMeanSquareError(lm, medv ~ log(lstat) + poly(rm, 5), Boston)
dataPrint<- c(linearModel,polyLinearModel,polynomialModel,overfittingPolyModel,linGam,fullGam,linearCombination,logPolyModel)
dataPrint
linearModel <- (testMeanSquareError(lm, medv ~ lstat + rm, Boston); "Linearni model")
dataPrint[2]
dataPrint[3]
polynomialModel
help(t.test)
t-test(polyLinearModel,linearModel)
t.test(polyLinearModel,linearModel)
library(ISLR)
library(ISLR)
library(splines)
library(gam)
library(akima)
attach(Wage) # since now, it is possible to refer to the variables in the Wage data frame by their names alone, without the prefix Wage$
library(splines)
library(gam)
library(akima)
attach(Wage) # since now, it is possible to refer to the variables in the Wage data frame by their names alone, without the prefix Wage$
# root mean squared error function for later evaluation
myRMSE = function(m, o){
sqrt(mean((m - o)^2))
}
fit.1=lm(wage~age,data=Wage)
fit.2=lm(wage~poly(age,2),data=Wage)
anova(fit.1,fit.2,fit.3,fit.4,fit.5)
fit.1=lm(wage~age,data=Wage)
fit.2=lm(wage~poly(age,2),data=Wage)
fit.4=lm(wage~poly(age,4),data=Wage)
fit.5=lm(wage~poly(age,5),data=Wage)
anova(fit.1,fit.2,fit.3,fit.4,fit.5)
fit.3=lm(wage~poly(age,3),data=Wage)
anova(fit.1,fit.2,fit.3,fit.4,fit.5)
coef(summary(fit.5))
coef(summary(fit.2))
anova(linearModel,polyLinearModel,polynomialModel,overfittingPolyModel,linGam,fullGam,linearCombination,logPolyModel)
overfittingPolyModel <- testMeanSquareError(lm, medv ~ poly(lstat, 8, raw = TRUE) + poly(rm, 8, raw=TRUE), Boston)
overfittingPolyModel
testMeanSquareError(lm, medv ~ (ns(lstat,9) + ns(rm,9)), Boston)
testMeanSquareError(lm, medv ~ (ns(lstat,2) + ns(rm,2)), Boston)
testMeanSquareError(lm, medv ~ (ns(lstat,3) + ns(rm,3)), Boston)
testMeanSquareError(lm, medv ~ (ns(lstat,4) + ns(rm,4)), Boston)
testMeanSquareError(lm, medv ~ (ns(lstat,5) + ns(rm,5)), Boston)
testMeanSquareError(lm, medv ~ (ns(lstat,6) + ns(rm,6)), Boston)
testMeanSquareError(lm, medv ~ (ns(lstat,7) + ns(rm,7)), Boston)
testMeanSquareError(lm, medv ~ (ns(lstat,8) + ns(rm,8)), Boston)
testMeanSquareError(lm, medv ~ (ns(lstat,9) + ns(rm,9)), Boston)
anova(fit.1,fit.2,fit.3,fit.4,fit.5,fit.6,fit.7,fit.8)
fit.1=lm(medv ~ lstat + rm, data=Boston)
fit.2=lm(medv ~ poly(rm, 5, raw = TRUE) + lstat, data = Boston)
fit.3=lm(medv ~ poly(lstat, 9, raw = TRUE) + poly(rm, 9, raw=TRUE),data= Boston)
fit.4=lm, medv ~ poly(lstat, 7, raw = TRUE) + poly(rm, 7, raw=TRUE),data= Boston)
fit.5=gam(medv ~ ns(lstat,5) + rm, data=Boston)
fit.6=gam(medv ~ ns(lstat,9) + ns(rm,9) data=Boston)
fit.7=lm(medv ~ (ns(lstat,9) + ns(rm,9)), data=Boston)
fit.8=lm(medv ~ log(lstat) + poly(rm, 5), data=Boston)
anova(fit.1,fit.2,fit.3,fit.4,fit.5,fit.6,fit.7,fit.8)
fit.1=lm(medv ~ lstat + rm, data=Boston)
fit.2=lm(medv ~ poly(rm, 5, raw = TRUE) + lstat, data = Boston)
fit.3=lm(medv ~ poly(lstat, 9, raw = TRUE) + poly(rm, 9, raw=TRUE),data= Boston)
fit.4=lm, medv ~ poly(lstat, 7, raw = TRUE) + poly(rm, 7, raw=TRUE),data= Boston)
fit.5=gam(medv ~ ns(lstat,5) + rm, data=Boston)
fit.6=gam(medv ~ ns(lstat,9) + ns(rm,9) data=Boston)
fit.7=lm(medv ~ (ns(lstat,9) + ns(rm,9)), data=Boston)
fit.8=lm(medv ~ log(lstat) + poly(rm, 5), data=Boston)
fit.1=lm(medv ~ lstat + rm, data=Boston)
fit.2=lm(medv ~ poly(rm, 5, raw = TRUE) + lstat, data = Boston)
fit.3=lm(medv ~ poly(lstat, 9, raw = TRUE) + poly(rm, 9, raw=TRUE),data= Boston)
fit.4=lm, medv ~ poly(lstat, 7, raw = TRUE) + poly(rm, 7, raw=TRUE),data= Boston)
fit.5=gam(medv ~ ns(lstat,5) + rm, data=Boston)
fit.6=gam(medv ~ ns(lstat,9) + ns(rm,9) data=Boston)
fit.7=lm(medv ~ (ns(lstat,9) + ns(rm,9)), data=Boston)
fit.8=lm(medv ~ log(lstat) + poly(rm, 5), data=Boston)
fit.1=lm(medv ~ lstat + rm, data=Boston)
fit.2=lm(medv ~ poly(rm, 5, raw = TRUE) + lstat, data = Boston)
fit.3=lm(medv ~ poly(lstat, 9, raw = TRUE) + poly(rm, 9, raw=TRUE),data= Boston)
fit.4=lm, medv ~ poly(lstat, 7, raw = TRUE) + poly(rm, 7, raw=TRUE),data= Boston)
fit.5=gam(medv ~ ns(lstat,5) + rm, data=Boston)
fit.6=gam(medv ~ ns(lstat,9) + ns(rm,9) data=Boston)
fit.7=lm(medv ~ (ns(lstat,9) + ns(rm,9)), data=Boston)
fit.8=lm(medv ~ log(lstat) + poly(rm, 5), data=Boston)
fit.1=lm(medv ~ lstat + rm, data=Boston)
fit.2=lm(medv ~ poly(rm, 5, raw = TRUE) + lstat, data = Boston)
fit.3=lm(medv ~ poly(lstat, 9, raw = TRUE) + poly(rm, 9, raw=TRUE),data= Boston)
fit.4=lm, medv ~ poly(lstat, 7, raw = TRUE) + poly(rm, 7, raw=TRUE),data= Boston)
fit.5=gam(medv ~ ns(lstat,5) + rm, data=Boston)
fit.6=gam(medv ~ ns(lstat,9) + ns(rm,9) data=Boston)
fit.7=lm(medv ~ (ns(lstat,9) + ns(rm,9)), data=Boston)
fit.8=lm(medv ~ log(lstat) + poly(rm, 5), data=Boston)
fit.1=lm(medv ~ lstat + rm, data=Boston)
fit.2=lm(medv ~ poly(rm, 5, raw = TRUE) + lstat, data = Boston)
fit.3=lm(medv ~ poly(lstat, 9, raw = TRUE) + poly(rm, 9, raw=TRUE),data= Boston)
fit.4=lm, medv ~ poly(lstat, 7, raw = TRUE) + poly(rm, 7, raw=TRUE),data= Boston)
fit.5=gam(medv ~ ns(lstat,5) + rm, data=Boston)
fit.6=gam(medv ~ ns(lstat,9) + ns(rm,9), data=Boston)
fit.7=lm(medv ~ (ns(lstat,9) + ns(rm,9)), data=Boston)
fit.8=lm(medv ~ log(lstat) + poly(rm, 5), data=Boston)
anova(fit.1,fit.2,fit.3,fit.4,fit.5,fit.6,fit.7,fit.8)
fit.1=lm(medv ~ lstat + rm, data=Boston)
fit.2=lm(medv ~ poly(rm, 5, raw = TRUE) + lstat, data = Boston)
fit.3=lm(medv ~ poly(lstat, 9, raw = TRUE) + poly(rm, 9, raw=TRUE),data= Boston)
fit.4=lm, medv ~ poly(lstat, 7, raw = TRUE) + poly(rm, 7, raw=TRUE),data= Boston)
fit.5=gam(medv ~ ns(lstat,5) + rm, data=Boston)
fit.6=gam(medv ~ ns(lstat,9) + ns(rm,9), data=Boston)
fit.7=lm(medv ~ (ns(lstat,9) + ns(rm,9)), data=Boston)
fit.8=lm(medv ~ log(lstat) + poly(rm,5), data=Boston)
fit.1=lm(medv ~ lstat + rm, data=Boston)
fit.2=lm(medv ~ poly(rm, 5, raw = TRUE) + lstat, data = Boston)
fit.3=lm(medv ~ poly(lstat, 9, raw = TRUE) + poly(rm, 9, raw=TRUE),data= Boston)
fit.4=lm(medv ~ poly(lstat, 7, raw = TRUE) + poly(rm, 7, raw=TRUE),data= Boston)
fit.5=gam(medv ~ ns(lstat,5) + rm, data=Boston)
fit.6=gam(medv ~ ns(lstat,9) + ns(rm,9), data=Boston)
fit.7=lm(medv ~ (ns(lstat,9) + ns(rm,9)), data=Boston)
fit.8=lm(medv ~ log(lstat) + poly(rm,5), data=Boston)
anova(fit.1,fit.2,fit.3,fit.4,fit.5,fit.6,fit.7,fit.8)
fit.1=lm(medv ~ lstat + rm, data=Boston)
fit.2=lm(medv ~ poly(rm, 5, raw = TRUE) + lstat, data = Boston)
fit.3=lm(medv ~ poly(lstat, 9, raw = TRUE) + poly(rm, 9, raw=TRUE),data= Boston)
fit.4=lm(medv ~ poly(lstat, 7, raw = TRUE) + poly(rm, 7, raw=TRUE),data= Boston)
fit.5=gam(medv ~ ns(lstat,5) + rm, data=Boston)
fit.6=gam(medv ~ ns(lstat,9) + ns(rm,9), data=Boston)
fit.7=lm(medv ~ ns(lstat,9) + ns(rm,9), data=Boston)
fit.8=lm(medv ~ log(lstat) + poly(rm,5), data=Boston)
anova(fit.1,fit.2,fit.3,fit.4,fit.5,fit.6,fit.7,fit.8)
fit.1=lm(medv ~ lstat + rm, data=Boston)
fit.2=lm(medv ~ poly(rm, 5, raw = TRUE) + lstat, data = Boston)
fit.3=lm(medv ~ poly(lstat, 9, raw = TRUE) + poly(rm, 9, raw=TRUE),data= Boston)
fit.4=lm(medv ~ poly(lstat, 7, raw = TRUE) + poly(rm, 7, raw=TRUE),data= Boston)
fit.5=gam(medv ~ ns(lstat,5) + rm, data=Boston)
fit.6=gam(medv ~ ns(lstat,9) + ns(rm,9), data=Boston)
fit.7=lm(medv ~ ns(lstat,9) + ns(rm,9), data=Boston)
fit.8=lm(medv ~ log(lstat) + poly(rm,5), data=Boston)
anova(fit.3,fit.2,fit.1,fit.4,fit.5,fit.6,fit.7,fit.8)
fit.2
anova(fit.3,fit.2)
anova(fit.3,fit.1)
anova(fit.3,fit.4)
anova(fit.1,fit.2,fit.3,fit.4,fit5,fit.6,fit.7,fit.8)
fit.1=lm(medv ~ lstat + rm, data=Boston)
fit.2=lm(medv ~ poly(rm, 5, raw = TRUE) + lstat, data = Boston)
fit.3=lm(medv ~ poly(lstat, 9, raw = TRUE) + poly(rm, 9, raw=TRUE),data= Boston)
fit.4=lm(medv ~ poly(lstat, 7, raw = TRUE) + poly(rm, 7, raw=TRUE),data= Boston)
fit.5=gam(medv ~ ns(lstat,5) + rm, data=Boston)
fit.6=gam(medv ~ ns(lstat,9) + ns(rm,9), data=Boston)
fit.7=lm(medv ~ ns(lstat,9) + ns(rm,9), data=Boston)
fit.8=lm(medv ~ log(lstat) + poly(rm,5), data=Boston)
anova(fit.1,fit.2,fit.3,fit.4,fit5,fit.6,fit.7,fit.8)
fit.1=lm(medv ~ lstat + rm, data=Boston)
fit.2=lm(medv ~ poly(rm, 5, raw = TRUE) + lstat, data = Boston)
fit.3=lm(medv ~ poly(lstat, 9, raw = TRUE) + poly(rm, 9, raw=TRUE),data= Boston)
fit.4=lm(medv ~ poly(lstat, 7, raw = TRUE) + poly(rm, 7, raw=TRUE),data= Boston)
fit.5=gam(medv ~ ns(lstat,5) + rm, data=Boston)
fit.6=gam(medv ~ ns(lstat,9) + ns(rm,9), data=Boston)
fit.7=lm(medv ~ ns(lstat,9) + ns(rm,9), data=Boston)
fit.8=lm(medv ~ log(lstat) + poly(rm,5), data=Boston)
anova(fit.1,fit.2,fit.3,fit.4,fit5,fit.6,fit.7,fit.8)
anova(fit.1,fit.2,fit.3,fit.4,fit.5,fit.6,fit.7,fit.8)
linGam <- testMeanSquareError(gam, medv ~ ns(lstat,5) + rm, Boston)
linGam <- testMeanSquareError(gam, medv ~ ns(lstat,5) + s(rm), Boston)
linGam
linGam <- testMeanSquareError(gam, medv ~ ns(lstat,5) + rm, Boston)
linGam
linearCombination <- testMeanSquareError(lm, medv ~ ns(lstat,9) + ns(rm,9), Boston)
linearCombination
linearCombination <- testMeanSquareError(lm, medv ~ (ns(lstat,9) + ns(rm,9)), Boston)
linearCombination
fullGam <- testMeanSquareError(gam, medv ~ ns(lstat,9) + ns(rm,9), Boston)
anova(fit.1,fit.2,fit.3,fit.4,fit.5,fit.6,fit.7,fit.8)
