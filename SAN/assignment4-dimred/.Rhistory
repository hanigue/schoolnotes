install.packages(c("deldir", "tree"))
knitr::opts_chunk$set(echo = TRUE)
PlotPoints <- function(X, labels, colors){
library(deldir, quietly = TRUE)
voronoi <- deldir(X[,1], X[,2])
plot(X[,1], X[,2], type="n", asp=1, xlab = "", ylab = "")
points(X[,1], X[,2], pch=20, col=colors[,1], cex=1.3)
text(X[,1], X[,2], labels = labels[,1], pos = 1, cex = 0.6)
plot(voronoi, wlines="tess", wpoints="none", number=FALSE, add=TRUE, lty=1)
legend("topleft", legend = sort(unique(colors[,1])), col=sort(unique(colors[,1])), pch=20, cex = 0.8)
}
Classify <- function(X, colors, kfolds = 50){
#install.packages('tree')
library(tree)
#library(caret)
set.seed(17)
#add class
if(!any(names(X) == "class")){X <- cbind(X, class=as.factor(colors))}
#randomly shuffle the data
data <-X[sample(nrow(X)),]
#Create 10 equally size folds
folds <- cut(seq(1,nrow(data)),breaks=kfolds,labels=FALSE)
acc <- rep(0, times = kfolds)
#10 fold cross validation
for(i in 1:kfolds){
#Segment your data by fold using the which() function
testIndexes <- which(folds==i,arr.ind=TRUE)
testData <- data[testIndexes, ]
trainData <- data[-testIndexes, ]
model <- tree(formula = class ~., data = trainData)
pre <- predict(model, newdata=testData, y = TRUE, type="class")
acc[i] <- sum(pre == testData$class)/length(testData$class)
}
return(acc)
}
